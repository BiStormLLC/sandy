/**
 * 
 * // Begin License Message 

 * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * 
 * This File was originally generated by BiStorm, LLC 
 * in Tacoma, "Grit City", Wa, U.S.A.
 * and adheres to the The GNU General Public License : 
 * https://www.gnu.org/licenses/gpl-3.0.en.html
 * 
 * 2017 BiStorm, LLC
 * 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * 

 *
 * This file is the property of BiStorm, LLC and is provided free of charge.
 * We don't even seek credit for this work, which is why it's yours to use how
 *  you'd like under the GNU General Public License.
 * If you'd like to give us credit, we'd be much abliged!  
 *  Copy and paste the message above into your project, and the rest can be freely used 
 *  and distributed as you'd see fit.
 * 

 * // End of License Message 
 
 *
 * FILE: webpack.config.js
 *   webpack configuration for BiStorm, LLC
 *   App Type: Client
 *   Available environments: Currently only prod
 * 
 * PLUGINS:
 * 	1. Modernizr
 * 
 * MODULES:
 *  1. noParse
 *  2. loaders [babel, style-loader]
 * 
 * VENDORS:
 *  1. jQuery 1.11.2
 * 
 * NOTE:
 *  BiStorm does not implement jQuery globally (bad practice)
 */

var webpack = require('webpack');
var path = require('path');

var DIST_DIR = path.resolve(__dirname, 'src/client/public');
var SRC_DIR = path.resolve(__dirname, 'src/client/app');

var config = {
  addVendor: function (name, path) {
  	this.resolve.alias[name] = path;
  	this.module.noParse.push(new RegExp('^' + name + '$'));
  },
  entry: {
  	app: SRC_DIR + '/index.jsx',
  },
  output: {
    path: DIST_DIR + '/js',
    filename: 'bundle.js',
    publicPath: DIST_DIR + "/js/"
  },
  minify: {
  	output: {
  		comments: false,
  		beautify: true
  	}
  },
  module : {
  	noParse: [],
    loaders : [
      {
        test : /\.jsx?/,
        include : SRC_DIR,
        loader : 'babel-loader',
        exclude: /node_modules/,
        query: {
        	presets: ['es2015', 'react']
        }
      },
      {
      	test: /\.css$/,
  		loader: 'style-loader'
      },
      {
      	test: /\.css$/, 
      	include : DIST_DIR + "/css",
      	loader: "css-loader",
      	query: {
    		modules: true,
    		localIdentName: '[name]__[local]___[hash:base64:5]' 
    	}
      }
    ],
  },
  resolve: {
  	alias: {},
    extensions: ['', '.js', '.css']
  },
  plugins: [
    new webpack.NoErrorsPlugin()
  ],
  'feature-detects': [
    'input',
    'canvas',
    'css/resize'
  ]
};

module.exports = config;