worker_processes auto;

events {
    worker_connections  1024;
    multi_accept on;
}

# Multi-worker live streaming
#rtmp_auto_push on;

# RTMP configuration
rtmp {
    server {
	listen 1935; # Listen on standard RTMP port
	listen 1981; # Port forward from host 8081 via vagranti
	timeout 60;
        chunk_size 4000;

	access_log /vagrant/logs/rtmp_access.log;

        # USECASE: Watching HDHomeRun Prime without an additional app
        application c {
            live on;
	    interleave on;
	    wait_key on;

	    #record stream
	    record manual;
            record_path /vagrant/convert/video/;

            # Timestamps for organizing converted streams
            record_suffix _%Y-%B-%d-%A_%H-%M-%S.flv;
	   
	    ## /vagrant/bistorm/hdhomerun/channel initiates transcoding.
	    ##  When we receive transcoded MP4, send to HLS and DASH 

            exec_play bash -c "echo $addr $pageurl >> /vagrant/logs/c_clients-log.txt";

            exec_publish_done bash -c "/vagrant/bistorm/storm >>/vagrant/logs/storm-log.txt";

	    exec_push ffmpeg -i rtmp://localhost/c/$name -vcodec copy -acodec copy -f flv rtmp://localhost/hlsc/$name -vcodec copy -acodec copy -f flv rtmp://localhost/dashc/$name;

            # Package as mp4 when finished and send to the convert/raw folder
            exec_record_done /vagrant/bistorm/convert/stream_mp4_dump_to_raw $path /vagrant/convert/video/raw >/vagrant/logs/c_stream_mp4_dump_to_raw-log.txt"; 
	}

        # USECASE: Using a single-threaded MP4 stream for Live Web Streaming
        #  With post-stream auto-conversion to multi-bitrate stream-ready files
        application d {
            live on;
            interleave on;
            wait_key on;

            #record stream
	    #Conversion services will take it from there
            record all;
            record_path /vagrant/convert/video/;

            # Timestamps for organizing converted streams
            record_suffix _%Y-%B-%d-%A_%H-%M-%S.flv;

            exec_play bash -c "echo $addr $pageurl >> /vagrant/logs/d_clients-log.txt";
            exec_publish bash -c "echo $addr >> /vagrant/logs/d_publishers-log.txt";
            exec_publish_done /vagrant/bistorm/storm >/vagrant/logs/storm-log.txt;

            # Send our feed to HLS and DASH applications
	    exec_push ffmpeg -i rtmp://localhost/d/$name -vcodec copy -acodec copy -f flv rtmp://localhost/hlsd/$name -vcodec copy -acodec copy -f flv rtmp://localhost/dashd/$name;
            
            # Package as mp4 when finished and send to the convert/raw folder
            exec_record_done /vagrant/bistorm/convert/stream_mp4_dump_to_raw $path /vagrant/convert/video/raw >/vagrant/logs/d_stream_mp4_dump_to_raw-log.txt; 
   	}

        # USECASE: Using a single MP4 stream to create an adaptive Live Web Stream
        #  At multiple profiled bitrates
	application z {
            live on;
            interleave on;
            wait_key on;

            #record stream
            #Conversion services will take it from there
            record manual;
            record_path /vagrant/convert/video/;

            # Timestamps for organizing converted streams
            record_suffix _%Y-%B-%d-%A_%H-%M-%S.flv;

            exec_play bash -c "echo $addr $pageurl >>/vagrant/logs/z_clients-log.txt";
            exec_publish bash -c "echo $addr >>/vagrant/logs/z_publishers-log.txt";
            exec_publish_done bash /vagrant/bistorm/storm >/vagrant/logs/storm-log.txt;

            # Adaptive transcoding /vagrant/bistorm/nginx-rtmp/z-adaptive
            exec_push /vagrant/bistorm/multicast/z-adaptive >/vagrant/logs/rtmp-z-adaptive-log.txt;

             # Package as mp4 when finished and send to the convert/raw folder
            #exec_record_done /vagrant/bistorm/convert/stream_mp4_dump_to_raw $path /vagrant/convert/video/raw >/vagrant/logs/z_stream_mp4_dump_to_raw-log.txt;
        }

        # HLS processing on the c application
	application hlsc {
            live on;
	    interleave on;
	    wait_key on;
            hls on;
            hls_path "/var/www/hls/c";
            hls_fragment 3;
            hls_nested on;
            hls_playlist_length 60;
	    hls_cleanup on;
            allow publish all;
            allow play all;
	}

        # HLS processing on the d application
	application hlsd {
            live on;
	    interleave on;
	    wait_key on;
            hls on;
            hls_path "/var/www/hls/d";
            hls_fragment 3;
            hls_nested on;
            hls_playlist_length 60;
	    hls_cleanup on;
            allow publish all;
            allow play all;
	}

        # HLS processing on the z application
	application hlsz {
	    live on;
	    interleave on;
	    wait_key on;
            hls on;
            hls_path "/var/www/hls/z";
            hls_fragment 3;
            hls_nested on;
            hls_playlist_length 60;
	    hls_cleanup on;
            allow publish all;
            allow play all;

            hls_variant _local BANDWIDTH=5000000;
            hls_variant _wifi BANDWIDTH=2500000;
            hls_variant _mobile BANDWIDTH=800000;
            hls_variant _low BANDWIDTH=312000;
            hls_variant _audio BANDWIDTH=192000;
	}

        # DASH processing on the c application
	application dashc {
	    live on;
	    interleave on;
	    wait_key on;
            dash on;
            dash_nested on;
            dash_path "/var/www/dash/c";
            dash_fragment 3;
            dash_playlist_length 60;
	    dash_cleanup on;
            allow publish all;
            allow play all;
	}

        # HLS processing on the d application
	application dashd {
	    live on;
	    interleave on;
	    wait_key on;
            dash on;
            dash_nested on;
            dash_path "/var/www/dash/d";
            dash_fragment 3;
            dash_playlist_length 60;
	    dash_cleanup on;
            allow publish all;
            allow play all;
	}

        # HLS processing on the z application
	application dashz {
	    live on;
	    interleave on;
	    wait_key on;
            dash on;
            dash_nested on;
            dash_path "/var/www/dash/z";
            dash_fragment 3;
            dash_playlist_length 60;
	    dash_cleanup on;
            allow publish all;
            allow play all;
	} 
    }
}

http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    include mime.types;
    default_type application/octet-stream;

    server {
        listen 9081;
        server_name sandy.bistorm.local;
        server_name 0.0.0.0;

        # / Establishes default headers for all virtual locations
	location / {
	    # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header 'Access-Control-Allow-Headers' 'Range';
            add_header 'Cache-Control' 'no-cache';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Headers' 'Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
	    }

            # Recognized filetypes for the RTMP server
            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
                video/mpeg mpeg;
            }

            root /var/www/hls/;
	}

        # Serving localhost:9081/hlsc/$name
	location ~* ^/hlsc/(.+)$ {
            alias /var/www/hls/c/$1;
            index index.m3u8;
            autoindex on;
        }

        # Serving localhost:9081/hlsd/$name
	location ~* ^/hlsd/(.+)$ {
            alias /var/www/hls/d/$1;
            index index.m3u8;
            autoindex on;
        }

        # Serving localhost:9081/hlsz/$name
        location ~* ^/hlsz/(.+)$ {
            alias /var/www/hls/z/$1;
            index index.m3u8;
            autoindex on;
        }   

        # Serving localhost:9081/dashc/$name
	location ~* ^/dashc/(.+)$ {
            alias /var/www/dash/c/$1;
            index index.mpd;
            autoindex on;
        }

        # Serving localhost:9081/dashc/$name
	location ~* ^/dashd/(.+)$ {
            alias /var/www/dash/d/$1;
            index index.mpd;
            autoindex on;
        }

        # Serving localhost:9081/dashz/$name
	location ~* ^/dashz/(.+)$ {
            alias /var/www/dash/z/$1;
            index index.mpd;
            autoindex on;
        }

        # Serving localhost:9081/capture-gallery
	location ~* ^/capture-gallery/(.+)$ {
            root /var/www/public/capture-gallery/$1;
            index index.html;
            autoindex on;
        }

        # Serving localhost:9081/vod
	location ~* ^/vod/(.+)$ {
            root /var/www/public/vod/$1;
            index index.m3u8;
            autoindex on;
        }
        
        # Status stub is part of Nginx Status Module -- Needs to be compiled with Nginx
        #  along with the nginx RTMP module
        #  https://nginx.org/en/docs/http/ngx_http_stub_status_module.html
        location /status {
            # Turn on stats
            stub_status on;
            access_log   off;
            allow all;
        }

	location /control {
            # https://github.com/arut/nginx-rtmp-module/wiki/Directives#rtmp_control
	    rtmp_control all;
	}
    }
}
