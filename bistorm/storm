#!/bin/bash
#
# Description: storm is initiated after Sandy has booted. It has two use cases:
#   * crontab runs storm on reboot to re-provision some services
#     OR you can run storm after editing a bistorm/conf file to re-add it into the guest machine
#   * It is also a testbed for incorporating new libraries and technologies.
#   This is primarily so that our devs don't write 'test code' in prod files.
#   Write your functions here first, validate them, then extend as needed

echo -e "\n\nSandy: my storm script was initiated.  Here's what you should know:"

source /vagrant/bistorm/conf/ubuntu/storm_init_ubuntu_setup $1
source /vagrant/bistorm/vars/storm_init_vars $1

echo -e "\n##\n"

# Initialize Env Vars
echo -e "Sandy: Environment Variables are available through PHP: http://php.net/manual/en/function.getenv.php\n"
for f in /vagrant/bistorm/vars/*; do
    if [ $(basename "$f") == "storm_init_vars" ]; then continue; fi
    echo -e "Sandy: $(basename $f): \n"
    source "/vagrant/bistorm/vars/$(basename $f)"
    echo -e "\n"
done

echo -e "##\n"

# Initialize Web Servers and Applications
source /vagrant/bistorm/conf/web/storm_init_web_servers $1
source /vagrant/bistorm/conf/apps/media/storm_init_apps_media $1

# Service resets
## Live storm events are like this: death, hills and dashing
/vagrant/bistorm/ffmpeg_kill "/var/www/hls" "/var/www/dash" > /vagrant/logs/ffmpeg_kill-log.txt 
## Kill running X^nDir VOD services
sudo killall raw_mp4_to_vod raw_aac_to_vod &>/dev/null

# Ensure we have directories to transfer recordings from 
#  working directory (/vagrant/convert)
if [ -d "/var/www/vod" ]; then
    mkdir -p "/var/www/vod/video/live" "/var/www/vod/audio/live"
fi

# X^nDir script initializations
echo "Sandy: I am initiating X^nDir for auto-conversion of live feeds."
/vagrant/bistorm/convert/raw_mp4_to_vod "/vagrant/convert/video/raw" "/var/www/vod" > /vagrant/logs/service-raw_mp4_to_vod-log.txt &
/vagrant/bistorm/convert/raw_aac_to_vod "/vagrant/convert/audio/raw" "/var/www/vod" > /vagrant/logs/service-raw_aac_to_vod-log.txt &

# Output footer message
echo -e "\n##\n"

echo -e "Sandy: vCumulus Routes:"
echo "Sandy: Watch a live channel (:TODO ... currently only supports ATSC whole-digit tunings)"
echo "  numbers only http://$SANDY_IP/c/[[HDHOMERUN_CHANNEL]]"
echo -e "Sandy: Example: \nhttp://$SANDY_IP/c/13 for @Q13Fox in Tacoma, WA 98[404NOTFOUND]"
echo -e "\n##\n"
echo "Sandy: Broadcast from desktop: From broadcasting app, publish to: " 
echo "  rtmp://$SANDY_IP:[default:1935|OR|:1981 if 1935 is blocked]/d/[[unique stream id]]"
echo -e "Sandy: Example: rtmp://$SANDY_IP:1981/d/pretwitch"
echo -e "Sandy: Watch a live desktop broadcast: \n  http://$SANDY_IP/d/pretwitch"
echo -e "\n##\n"
echo -e "Sandy: Check out these other open packages from our digi-friends: \n"
echo -e "--tvheadend: http://$SANDY_IP:9981"
echo -e "  (Login with user 'vagrant' and password 'vagrant')\n"
echo -e "--mediatomb: http://$SANDY_IP:5555 \n"
echo -e "\n##\n"
echo "Sandy: To ask me to use my kill switch on all streams, visit [or curl]: " 
echo -e "Sandy: http://$SANDY_IP:9082/action/stop or \n    http://$SANDY_IP/slug/action/stop"
echo -e "\nSandy: Testing Nginx configuration: " 
sudo nginx -t 

echo -e "\n##\n"


############
exit 0
############



#################################
#Sandbox (Runs on boot and keeps going unless 'sudo killall storm' is run)
#################################

#while [ true ]; done

#done
