#!/bin/bash
#
# Description: storm is initiated after Sandy has booted. It has two use cases:
#   * crontab runs storm on reboot to re-provision some services
#     OR you can run storm after editing a bistorm/conf file to re-add it into the guest machine
#   * It is also a testbed for incorporating new libraries and technologies.
#   This is primarily so that our devs don't write 'test code' in prod files.
#   Write your functions here first, validate them, then extend as needed

env=$1
reboot_web_servers=$2

if [ -z $1 ]; then
    env="release"
fi

if [ -z $2 ]; then
    reboot_web_servers="true"
fi

echo -e "\n\nSandy: my storm script was initiated.  Here's what you should know:"

source /vagrant/bistorm/conf/ubuntu/storm_init_ubuntu_setup $env
source /vagrant/bistorm/vars/storm_init_vars $env

echo -e "\n##\n"

# Initialize Env Vars
echo -e "Sandy: Environment Variables are available through PHP: http://php.net/manual/en/function.getenv.php\n"
for f in /vagrant/bistorm/vars/*; do
    if [ $(basename "$f") == "storm_init_vars" ]; then continue; fi
    echo -e "Sandy: $(basename $f): \n"
    source "/vagrant/bistorm/vars/$(basename $f)"
    echo -e "\n"
done

echo -e "##\n"

# Initialize Web Servers and Applications
if [ "$reboot_web_servers" == "true" ];then
    source /vagrant/bistorm/conf/web/storm_init_web_servers $env 
fi

source /vagrant/bistorm/conf/apps/media/storm_init_apps_media $env

# Service resets
## Live storm events are like this: death, hills and dashing
/usr/local/bin/bistorm/stream/killswitch "/var/www/hls" "/var/www/dash" &>$LOG_LOC/killswitch-log.txt 
## Kill running X^nDir VOD services
#sudo killall raw_mp4_to_vod raw_aac_to_vod &>/dev/null

# Ensure we have directories to transfer recordings from 
#  working directory (/vagrant/xndir)
if [ -d "/var/www/vod/video/live" ] || [ -d "/var/www/vod/audio/live" ]; then
    sudo mkdir -p "/var/www/vod/video/live" "/var/www/vod/audio/live"
fi

# Ensure we have a capture gallery directory
if [ -d "/var/www/public/capture-gallery" ]; then
    sudo mkdir -p "/var/www/public/capture-gallery"
fi

# Ensure we have public log directories
if [ ! -d "/var/www/log" ]; then
    sudo mkdir -p "/var/www/log" "/var/www/log/access"
    #sudo chown root:root /var/www/log/* /var/www/log/access/*
    #sudo chmod 777 /var/www/log/access /var/www/log/access/*
fi

# X^nDir script initializations
echo "Sandy: I am initiating X^nDir for auto-conversion of live feeds."
/vagrant/bistorm/xndir/raw_mp4_to_vod "/vagrant/xndir/video/raw" "/var/www/vod" &> /dev/null &
#/vagrant/bistorm/xndir/raw_aac_to_vod "/vagrant/xndir/audio/raw" "/var/www/vod" &> $LOG_LOC/service-raw_aac_to_vod-log.txt &

# Output footer message
echo -e "\n##\n"

echo -e "Sandy: vCumulus Routes:"
echo "Sandy: Watch a live channel (:TODO ... currently only supports ATSC whole-digit tunings)"
echo "  numbers only http://$SANDY_IP/c/[[HDHOMERUN_CHANNEL]]"
echo -e "Sandy: Example: \nhttp://$SANDY_IP/c/13 for @Q13Fox in Tacoma, WA 98[404NOTFOUND]"
echo -e "\n##\n"
echo "Sandy: Broadcast from desktop: From broadcasting app, publish to: " 
echo "  rtmp://$SANDY_IP:[default:1935|OR|:1981 if 1935 is blocked]/d/[[unique stream id]]"
echo -e "Sandy: Example: rtmp://$SANDY_IP:1981/d/pretwitch"
echo -e "Sandy: Watch a live desktop broadcast: \n  http://$SANDY_IP/d/pretwitch"
echo -e "\n##\n"
echo -e "Sandy: Check out these other open packages from our digi-friends: \n"
echo -e "--tvheadend: http://$SANDY_IP:9981"
echo -e "  (Login with user 'vagrant' and password 'vagrant')\n"
echo -e "--mediatomb: http://$SANDY_IP:5555 \n"
echo -e "\n##\n"
echo "Sandy: To ask me to use my kill switch on all streams, visit [or curl]: " 
echo -e "Sandy: http://$SANDY_IP/slug/iot/hdhr/action/stop"
echo -e "\nSandy: Testing Nginx configuration: " 
sudo nginx -t 

echo -e "\n##\n"


############
exit 0
############



#################################
#Sandbox (Runs on boot and keeps going unless 'sudo killall storm' is run)
#################################

#while [ true ]; done

#done
