#!/bin/bash
#
# Description: Channel streamer for SLUG SiliconDust extension
#
echo "Sandy: I received a request to stream channel $1 ... " 
source /vagrant/bistorm/vars/prime_ip >/dev/null
echo -e "\nSandy: According to /vagrant/bistorm/vars, your SiliconDust device IP is ... $PRIME_IP" 

count=`ps aux | grep -v "grep" | grep -c ffmpeg`
# New stream, yay!  For performance, only serve if there is no existing conversions 
# ffmpeg creates PIDs even when not converting, so check against a low number before 
# deciding to transcode.  Older HDHomerun devices can not transcode. This script
# enforces a profile-based conversion for you to tweak to suit your cpu.
if [ $count -gt 3 ]; then
    echo -e "\nSandy: FFmpeg is current processing other jobs.  Please use my 'kill' link to stop them and then refresh the page." >> /vagrant/logs/hdhomerun_channel-log.txt
    exit 0
fi

## DEFAULT PROFILE
p_homerun_custom_q="transcode=mobile"
p_v_codec="h264"
p_a_codec="aac"
p_filter="null"
p_crf="30"
p_preset="normal"
p_v_profile="baseline"
p_maxrate="800k"
p_bufsize="1800k"
p_a_bitrate="128k"
p_g="60"
p_tune="fastdecode"
p_format="flv"

profile="/vagrant/bistorm/hdhomerun/.profile"

# Import ffmpeg profile variables for this folder
if [ -f "$profile" ]; then
    source "$profile"
    export $(cut -d= -f1 "$profile")
else
    echo "Sandy: No .profile file was found for $d, so I'm using my defaults."
fi

## Concatenated string of all of our profile settings
ffmpeg_string=" -s 960x540 -vcodec $p_v_codec -acodec $p_a_codec -b:a $p_a_bitrate -vf $p_filter -profile:v $p_v_profile -crf $p_crf -preset $p_preset -maxrate $p_maxrate -bufsize $p_bufsize -g $p_g -f $p_format"  
/usr/local/bin/ffmpeg -y -i "http://$PRIME_IP:5004/auto/v$1?$p_homerun_custom_q" $ffmpeg_string "rtmp://localhost/c/$1" >/dev/null 
echo -e "\nSandy: ffmpeg is running!  Do you see a stream?" 

